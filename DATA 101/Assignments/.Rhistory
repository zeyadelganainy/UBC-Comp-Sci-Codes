factor(m.pipitFactor)
factor(m.pipitFactor) <- levels("meadow.pipit","other")
factor(m.pipitFactor) <- c("meadow.pipit","other")
factor(cuckoos
)
library(DAAG)
cuckoos
factor(cuckoos)
factor(levels(cuckoos))
m.pipitFactor <- c("meadow.pipit"."other")
m.pipitFactor <- c("meadow.pipit","other")
factor(m.pipitFactor)
#Question 2f
cuckoos <- data.frame(cuckoos, "m.pipit" = c("TRUE","FALSE"))
cuckoos$m.pipit[which(cuckoos$species == "meadow.pipit" )] = "TRUE"
cuckoos$m.pipit[which(cuckoos$m.species != "meadow.pipit" )] = "FALSE"
cuckoos
cuckoos$m.pipit[which(cuckoos$species == "meadow.pipit" )] = "TRUE"
cuckoos
cuckoos$m.pipit[which(cuckoos$species == "other" )] = "FALSE"
cuckoos
cuckoos$m.pipit[which(cuckoos$species != "meadow.pipit" )] = "FALSE"
cuckoos
chickwts
# A
chickwts[14,]
# B
chickwts[c(7,14,37),1]
# C
chickwtsCasein <- subset(chickwts, feed == "casein")
chickwtsCasein
# D
mean(chickwtsCasein$weight)
# E
chickwts$Feed <- chickwts[,2]
levels(chickwts$Feed) <- c("Casein","Horsebean","Linseed","Meatmeal","Soybean","Sunflower")
chickwts
# F
chick240 <- subset(chickwts, chickwts$weight < 240)
chick240
# G
chick240Table <- table(chick240$feed)
chick240Table
barplot(chick240Table)
library(DAAG)
nrow(cuckoos)
cuckoos
# B
cuckoos$length[27,]
# B
cuckoos$length[,27]
# B
cuckoos[,27]
# B
cuckoos[27,]
# B
subset(cuckoos,cuckoos$length[27,])
# B
cuckoos[27,]
cuckoos$length
cuckoos$length[27]
# C
cuckoos[40,]
# D
levels(cuckoos$species)
# E
m.pipitFactor <- factor(cuckoos$species)
levels(m.pipitFactor) <- c("meadow.pipit","other","other","other","other","other")
which(cuckoos$species == "meadow.pipit")
m.pipitFactor[1:45] <- "meadow.pipit"
m.pipitFactor[46:120] <- "other"
m.pipitFactor
# F
cuckoos <- data.frame(cuckoos, "m.pipit" = c("TRUE","FALSE"))
cuckoos$m.pipit[which(cuckoos$species == "meadow.pipit")] <- "TRUE"
cuckoos$m.pipit[which(cuckoos$species != "meadow.pipit")] <- "FALSE"
cuckoos
# G
cuckoosMPipit <- data.frame(subset(cuckoos, cuckoos$m.pipit == TRUE))
cuckoosOther <- data.frame(subset(cuckoos, cuckoos$m.pipit == FALSE))
cuckoosMPipit
cuckoosOther
# H
cuckoosLongLength <- subset(cuckoos, cuckoos$length > 23)
cuckoosLongLength
mean(cuckoosLongLength$breadth)
Loblolly
plot(Loblolly)
plot(height ~ age ,data = Loblolly)
abline(lm(height ~ age, data = Loblolly))
#Question 1B
plot(area ~ elevation, data = Manitoba.lakes, xlim = c(160,260))
#Question 1A
library(DAAG)
plot(area ~ elevation, data = Manitoba.lakes)
#Question 1B
plot(area ~ elevation, data = Manitoba.lakes, xlim = c(160,260))
for(i in 1:9) {
text(Manitoba.lakes$elevation[i],Manitoba.lakes$area[i],
row.names(Manitoba.lakes)[i],adj = 1.1, cex = 0.7)
}
#Question 1C
leastsq.lm <- lm(area ~ elevation, data = Manitoba.lakes)
abline(leastsq.lm)
#Question 2
plot(height ~ age, data = Loblolly)
abline(lm(height ~ age, data = Loblolly))
plot(intercepts ~ slopes)
#Question 4
seed <- unique(Loblolly$Seed)
n <- length(seed)
slopes <- numeric(n)
intercepts <- numeric(n)
for (i in 1:n) {
lob.lm <- lm(height ~ age, data = subset(Loblolly, Seed==seed[i]))
slopes[i] <- coef(lob.lm)[2]
intercepts[i] <- coef(lob.lm)[1]
}
#My legend was not displaying correctly so I had to use this:
windows(20,20)
plot(intercepts ~ slopes)
lm(intercepts ~ slopes)
abline(lm(intercepts ~ slopse))
abline(lm(intercepts ~ slopes))
par(mfrow=c(1,2))
plot(intercepts ~ slopes)
abline(lm(intercepts ~ slopes))
plot(slopes ~ intercepts)
abline(lm(slopes ~ intercepts))
coef(lm(slopes ~ intercepts))
par(mfrow=c(1,3))
plot(height ~ age, data = Loblolly)
abline(0.004443651,2.596354997)
plot(height ~ age, data = Loblolly)
abline(intercepts, slopes)
plot(height ~ age, data = Loblolly)
abline(-1.4,2.6)
plot(height ~ age, data = Loblolly, main = "Actual")
plot(height ~ age, data = Loblolly, main = "Mine")
abline(0.004443651,2.596354997)
plot(height ~ age, data = Loblolly, main = "Actual")
abline(intercepts, slopes)
plot(height ~ age, data = Loblolly, main = "Theirs")
abline(-1.4,2.6)
mean(coef(lm(slopes ~ intercepts))[1])
mean(coef(lm(slopes ~ intercepts))[2])
Loblolly$Seed <- factor(Loblolly$Seed)
seeds <- levels(Loblolly$Seed)
n <- length(levels(Loblolly$Seed))
data_split <- split(Loblolly, Loblolly$Seed)
# dataframe vector for results
seed <- character(0)
intercept <- numeric(0)
slope <- numeric(0)
for (i in 1:n){
tree_model <- lm(height~age, data_split[[i]])
seed <- c(seed, seeds[i])
intercept <- c(intercept, tree_model$coefficients[1])
slope <- c(slope, tree_model$coefficients[2])
}
trees <- data.frame("Seed" = seed, "Intercept" = intercept, "Slope" = slope)
trees # dataframe containing slopes and intercepts for each seed
mean(coef(lm(trees$Slope ~ trees$Intercept))[1])
mean(coef(lm(trees$Slope ~ trees$Intercept))[2])
