#include <stdio.h>

#int main(){
# int t0;
#printf("Enter the number of disks:");
  #scanf("%d", &t0);
  #hanoi(t0, 0, 1, 2);
  #return 0;
#}

#void hanoi(int n, int src, int dest, int helper){
#if (n != 0) {
#hanoi(n - 1, src, helper, dest);
#printf("Move disk %d from peg %d to peg %d.\n", n, src, dest);
#hanoi(n - 1, helper, dest, src);
#}
#}
.data
 msg1:.asciiz "Enter the number of disks "
 m1: .asciiz " Move disk "
 m2: .asciiz " from peg "
 m3: .asciiz " to peg "
 .text
 main: li $v0 4     #print msg1
       la $a0 msg1
       syscall 
       li $v0 5     #let user enter an integer
       syscall 
       add $t0 $v0 $zero 
       add $a0 $t0 $zero #ready the arguments to go to hanoi 
       li $a1 0
       li $a2 1
       li $a3 2
       jal hanoi    #call hanoi 
       j exit     #jump to exit 
       
       
    exit: li $v0 10   #terminate the code 
           syscall
       
   hanoi: addi $sp $sp -20  #make the space in stack 
         sw $ra ($sp)     #store ra in stack 
         sw $a0 4($sp)    #store all the elements in stack one by one 
         sw $a1 8($sp)
         sw $a2 12($sp)
         sw $a3 16($sp)
         beq $a0 $zero next #if a0==0, then go to next 
         addi $a0 $a0 -1  #a0=a0-1
         lw $a1 8($sp)    #call back from stack and prepare arguments to call back hanoi
         lw $a2 16($sp)
         lw $a3 12($sp)
         jal hanoi     #call hanoi again
         la $a0 m1    #print m1 
         li $v0 4
         syscall 
         lw $a0 4($sp) #print requried digit 
         li $v0 1
         syscall 
         la $a0 m2     #print m2 
         li $v0 4
         syscall 
         lw $a0 8($sp) #print requried digit 
         li $v0 1
         syscall 
         la $a0 m3    #print m3 
         li $v0 4
         syscall 
         lw $a0 12($sp) #print requried digit 
         li $v0 1
         syscall
         li $a0 '\n'   #new line 
         li $v0 11
         syscall
         lw $a0 4($sp)    #prepare the argument by calling it from stack to call hanoi again
         lw $a1 16($sp)
         lw $a2 12($sp)
         lw $a3 8($sp)
         addi $a0 $a0 -1 #a0=a0-1
         jal hanoi     #call hanoi again
        
         
         
         
         
         next: 
         lw $ra ($sp)   #save ra again 
         addi $sp $sp 20 #delete the stack
         jr $ra    #go back to ra 

